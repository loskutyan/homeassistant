intercom:
  template:
    - trigger:
        - platform: state
          from: 'off'
          to: 'on'
          entity_id: binary_sensor.smartintercom_vkhodiashchii_zvonok
      binary_sensor:
        - name: 'Intercom Rings'
          state: 'on'
          auto_off: '00:00:15'

    - trigger:
        - platform: state
          from: 'Ответ'
          to: 'Открытие двери'
          entity_id: sensor.smartintercom_sostoianie_linii
      binary_sensor:
        - name: 'Intercom Lock Opened'
          state: 'on'
          auto_off: '00:00:10'
          device_class: lock

  lock:
    - platform: template
      name: 'Intercom door'
      value_template: >
        {{ is_state('switch.intercom_lock', 'on') }}
      lock:
        service: switch.turn_on
        entity_id: switch.intercom_lock
      unlock:
        service: switch.turn_off
        entity_id: switch.intercom_lock

  script:
    intercom_rings_aqara_hub_quiet_sound_notification:
      alias: 'Тихое звуковое уведомление Aqara Hub звонка в домофон'
      sequence:
        - service: scene.create
          data:
            scene_id: aqara_hub_state_revert
            snapshot_entities: 'media_player.miio_gateway'
        - service: media_player.volume_set
          entity_id: media_player.miio_gateway
          data_template:
            volume_level: 0.05
          continue_on_error: true
        - delay: 00:00:01
        - repeat:
            count: 2
            sequence:
              - service: media_player.play_media
                entity_id: media_player.miio_gateway
                data:
                  media_content_type: 'music'
                  media_content_id: 13
                continue_on_error: true
              - delay: 00:00:05
        - service: scene.turn_on
          data:
            entity_id: scene.aqara_hub_state_revert

    intercom_lock_opened_aqara_hub_quiet_sound_notification:
      alias: 'Тихое звуковое уведомление Aqara Hub открытия замка домофона'
      sequence:
        - service: script.turn_off
          entity_id: script.intercom_rings_aqara_hub_quiet_sound_notification
        - service: scene.turn_on
          data:
            entity_id: scene.aqara_hub_state_revert
        - service: scene.create
          data:
            scene_id: aqara_hub_state_revert
            snapshot_entities: 'media_player.miio_gateway'
        - service: media_player.volume_set
          entity_id: media_player.miio_gateway
          data_template:
            volume_level: 0.05
          continue_on_error: true
        - delay: 00:00:01
        - service: media_player.play_media
          entity_id: media_player.miio_gateway
          data:
            media_content_type: 'music'
            media_content_id: 14
          continue_on_error: true
        - delay: 00:00:08
        - service: scene.turn_on
          data:
            entity_id: scene.aqara_hub_state_revert

    intercom_light_flashes_notification:
      alias: 'Световое уведомление звонка в домофон'
      sequence:
        - repeat:
            count: 3
            sequence:
              - repeat:
                  for_each:
                    - 'orange'
                    - 'green'
                    - 'yellow'
                  sequence:
                    - parallel:
                        - service: light.turn_on
                          entity_id:
                            - light.miio_gateway
                          data:
                            color_name: '{{ repeat.item }}'
                            brightness_pct: 100
                          continue_on_error: true
                        - service: light.turn_on
                          entity_id:
                            - light.hallway_duty_aqara_led_strip
                          data:
                            color_name: '{{ repeat.item }}'
                            brightness_pct: 40
                          continue_on_error: true
                    - delay: 00:00:02
              - service: light.turn_off
                entity_id:
                  - light.miio_gateway
                  - light.hallway_duty_aqara_led_strip

    intercom_lock_open:
      alias: 'Открыть замок домофона'
      sequence:
        - if:
            - condition: state
              entity_id: binary_sensor.intercom_rings
              state: 'on'
          then:
            - service: button.press
              target:
                entity_id: button.smartintercom_propustit
          else:
            - service: switch.turn_on
              target:
                entity_id: switch.smartintercom_otkryvat_na_sleduiushchii_zvonok

    intercom_lock_close:
      alias: 'Закрыть замок домофона'
      sequence:
        - if:
            - condition: state
              entity_id: binary_sensor.intercom_rings
              state: 'on'
          then:
            - service: button.press
              target:
                entity_id: button.smartintercom_otkazat
        - service: switch.turn_off
          target:
            entity_id: switch.smartintercom_otkryvat_na_sleduiushchii_zvonok

  switch:
    - platform: template
      switches:
        intercom_lock:
          friendly_name: 'Замок домофона'
          value_template: >
            {% set not_auto_open = is_state('switch.smartintercom_otkryvat_na_sleduiushchii_zvonok', 'off') %}
            {% set not_door_is_being_opened = is_state('binary_sensor.intercom_lock_opened', 'off') %}
            {{ not_auto_open and not_door_is_being_opened }}
          availability_template: >
            {{ states('switch.smartintercom_otkryvat_na_sleduiushchii_zvonok') in ['on', 'off'] }}
          turn_on:
            service: script.intercom_lock_close
          turn_off:
            service: script.intercom_lock_open
          icon_template: mdi:phone-lock

  automation:
    - id: 'Звонок в домофон - уведомление'
      alias: intercom_rings_notify
      trigger:
        - platform: state
          entity_id: binary_sensor.intercom_rings
          from: 'off'
          to: 'on'
      action:
        - service: notify.tg_urgent
          data:
            message: >
              {% set messages = ['Кто-то позвонил в домофон!',
                                 'Кажется, кто-то пришел и звонит в домофон.',
                                 'Внизу люди! Звонят в домофон.'] %}
              {{ '\U0001F514' }} {{ messages | random }} {{ states('sensor.time_date') }}
          continue_on_error: true
        - service: script.intercom_light_flashes_notification
        - if:
            - condition: state
              entity_id: switch.smartintercom_otkliuchit_trubku_domofona
              state: 'on'
          then:
            service: script.intercom_rings_aqara_hub_quiet_sound_notification

    - id: 'Замок домофона открыт - уведомление'
      alias: intercom_lock_was_opened_notify
      trigger:
        - platform: state
          entity_id: binary_sensor.intercom_lock_opened
          from: 'off'
          to: 'on'
      action:
        - service: notify.tg_urgent
          data:
            message: >
              {% set messages = ['Дверь домофона открыта!',
                                 'Замок внизу открыт!',
                                 'Люди впущены!'] %}
              {{ '\U0001F514' }} {{ messages | random }} {{ states('sensor.time_date') }}
          continue_on_error: true
        - if:
            - condition: state
              entity_id: switch.smartintercom_otkliuchit_trubku_domofona
              state: 'on'
          then:
            service: script.intercom_lock_opened_aqara_hub_quiet_sound_notification
