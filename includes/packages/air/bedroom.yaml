bedroom_air:
  input_boolean:
    bedroom_airpurifier_favourite_speed_smart_control:
      name: 'Умное управление скоростью бризера в спальне'

  input_number:
    bedroom_airpurifier_favorite_speed:
      name: 'Установленная скорость бризера в спальне'
      min: 60
      max: 150
      step: 1
      icon: mdi:weather-windy

  input_select:
    bedroom_airpurifier_mode:
      name: 'Режим работы бризера в спальне'
      options:
        - Auto
        - Sleep
        - Favorite

  timer:
    bedroom_airpurifier_fixed_speed:
      name: 'Фиксированная скорость бризера в спальне, осталось '
      duration: 1800

  switch:
    - platform: template
      switches:
        bedroom_airpurifier_display:
          friendly_name: 'Дисплей бризера в спальне'
          value_template: "{{ is_state_attr('fan.mijia_airpurifier_bedroom', 'display', True) }}"
          turn_on:
            service: xiaomi_miio_airpurifier.fan_set_display_on
            entity_id: fan.mijia_airpurifier_bedroom
          turn_off:
            service: xiaomi_miio_airpurifier.fan_set_display_off
            entity_id: fan.mijia_airpurifier_bedroom
          icon_template: mdi:lightbulb-outline

        bedroom_airpurifier_buzzer:
          friendly_name: 'Звук бризера в спальне'
          value_template: "{{ is_state_attr('fan.mijia_airpurifier_bedroom', 'buzzer', True) }}"
          turn_on:
            service: xiaomi_miio_airpurifier.fan_set_buzzer_on
            entity_id: fan.mijia_airpurifier_bedroom
          turn_off:
            service: xiaomi_miio_airpurifier.fan_set_buzzer_off
            entity_id: fan.mijia_airpurifier_bedroom
          icon_template: mdi:volume-high

        bedroom_airpurifier_forced_ventilation:
          friendly_name: 'Проветривание в спальне'
          value_template: >
            {% set favorite_mode = is_state_attr('fan.mijia_airpurifier_bedroom', 'preset_mode', 'Favorite') %}
            {% set max_speed_flag = states('sensor.bedroom_airpurifier_favorite_speed') | int(0) == 150 %}
            {% set fixed_speed_timer_on = is_state('timer.bedroom_airpurifier_fixed_speed', 'active') %}
            {{ favorite_mode and max_speed_flag and fixed_speed_timer_on }}
          turn_on:
            - service: fan.turn_on
              entity_id: fan.mijia_airpurifier_bedroom
            - service: input_select.select_option
              entity_id: input_select.bedroom_airpurifier_mode
              data:
                option: 'Favorite'
            - service: input_number.set_value
              entity_id: input_number.bedroom_airpurifier_favorite_speed
              data:
                value: 150
            - service: timer.start
              entity_id: timer.bedroom_airpurifier_fixed_speed
          turn_off:
            - service: timer.finish
              entity_id: timer.bedroom_airpurifier_fixed_speed
          icon_template: mdi:weather-windy

        bedroom_airpurifier_favourite_speed_smart_control:
          friendly_name: 'Умное управление скоростью бризера в спальне'
          value_template: >
            {% set favorite_mode = is_state_attr('fan.mijia_airpurifier_bedroom', 'preset_mode', 'Favorite') %}
            {% set smart_control = is_state('input_boolean.bedroom_airpurifier_favourite_speed_smart_control', 'on') %}
            {{ favorite_mode and smart_control }}
          turn_on:
            - service: input_boolean.turn_on
              entity_id: input_boolean.bedroom_airpurifier_favourite_speed_smart_control
          turn_off:
            - service: input_boolean.turn_off
              entity_id: input_boolean.bedroom_airpurifier_favourite_speed_smart_control
          icon_template: mdi:fan-auto

        bedroom_airpurifier_favourite_speed_temporary_fixed:
          friendly_name: 'Фиксированная скорость бризера в спальне'
          value_template: >
            {% set favorite_mode = is_state_attr('fan.mijia_airpurifier_bedroom', 'preset_mode', 'Favorite') %}
            {% set smart_control = is_state('switch.bedroom_airpurifier_favourite_speed_smart_control', 'on') %}
            {% set fixed_speed_timer_on = is_state('timer.bedroom_airpurifier_fixed_speed', 'active') %}
            {{ favorite_mode and smart_control and fixed_speed_timer_on }}
          turn_on:
            - service: timer.start
              entity_id: timer.bedroom_airpurifier_fixed_speed
          turn_off:
            - service: timer.finish
              entity_id: timer.bedroom_airpurifier_fixed_speed
          icon_template: mdi:speedometer

  sensor:
    - platform: template
      sensors:
        bedroom_airpurifier_co2:
          friendly_name: 'Mi Fresh Air Bedroom CO²'
          device_class: carbon_dioxide
          unit_of_measurement: 'ppm'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'co2') }}"
          icon_template: mdi:molecule-co2

        bedroom_airpurifier_pm25:
          friendly_name: 'Mi Fresh Air Bedroom PM2.5'
          device_class: pm25
          unit_of_measurement: 'µg/m³'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'pm25') }}"
          icon_template: mdi:grain

        bedroom_airpurifier_temperature:
          friendly_name: 'Mi Fresh Air Bedroom Температура'
          device_class: temperature
          unit_of_measurement: '°C'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'temperature') }}"
          icon_template: mdi:thermometer

        bedroom_airpurifier_current_speed:
          friendly_name: 'Mi Fresh Air Bedroom Текущая скорость'
          device_class: volume_flow_rate
          unit_of_measurement: 'm³/h'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'control_speed') }}"
          icon_template: mdi:speedometer

        bedroom_airpurifier_favorite_speed:
          friendly_name: 'Mi Fresh Air Bedroom Установленная скорость'
          device_class: volume_flow_rate
          unit_of_measurement: 'm³/h'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'favorite_speed') }}"
          icon_template: mdi:speedometer

        bedroom_airpurifier_dust_filter_life_remaining:
          friendly_name: 'Mi Fresh Air Bedroom Состояние фильтра'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'dust_filter_life_remaining') }}"
          unit_of_measurement: '%'
          icon_template: mdi:air-filter

        bedroom_airpurifier_dust_filter_life_remaining_days:
          friendly_name: 'Mi Fresh Air Bedroom Дней до замены фильтра'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'dust_filter_life_remaining_days') }}"
          icon_template: mdi:air-filter

        bedroom_airpurifier_preset_mode:
          friendly_name: 'Mi Fresh Air Bedroom Режим работы'
          value_template: "{{ state_attr('fan.mijia_airpurifier_bedroom', 'preset_mode') }}"

        bedroom_current_target_temperature_delta:
          friendly_name: 'Разница текущей и желаемой температур в спальне'
          device_class: temperature
          unit_of_measurement: '°C'
          value_template: >
            {{ states('sensor.bedroom_average_temperature') | float - states('input_number.target_temperature') | float(22) }}

        bedroom_airpurifier_target_co2_delta:
          friendly_name: 'Поправка к скорости бризера в спальне'
          value_template: >
            {% set delta_ct = states('sensor.bedroom_current_target_temperature_delta') | float(1) %}
            {% set delta_ot = states('sensor.outside_target_temperature_delta') | float(1) %}
            {{ (delta_ct * delta_ot / ((delta_ct * delta_ot) | abs)) * min(150, ((delta_ct | abs)**1.5 * sin((min(20, delta_ot | abs)) / 20 * 3.1415926)) | round * 10) }}

        bedroom_airpurifier_speed_min_co2:
          value_template: >
            {% set co2_delta = states('sensor.bedroom_airpurifier_target_co2_delta') | float(0) %}
            {% set cooling_on = is_state('binary_sensor.bedroom_ac_is_cooling', 'on') | int %}
            {% set heating_on = is_state('switch.bedroom_airpurifier_ptc', 'on') | int %}
            {% set co2_shift = max(cooling_on, heating_on) * 150 + co2_delta * (1 - cooling_on) * (1 - heating_on)  %}
            {% if states('sensor.bedroom_airpurifier_favorite_speed') | float <= 60 %}
              0
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 70 %}
              {{ 600 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 80 %}
              {{ 650 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 90 %}
              {{ 700 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 100 %}
              {{ 750 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 110 %}
              {{ 800 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 120 %}
              {{ 900 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 130 %}
              {{ 950 + co2_shift }}
            {% else %}
              1200
            {% endif %}
          availability_template: >
            {% set valid_speed = states('sensor.bedroom_airpurifier_favorite_speed') | float(0) >= 60 %}
            {% set valid_temp = states('sensor.bedroom_average_temperature') | float(0) > 0 %}
            {{ valid_speed and valid_temp }}

        bedroom_airpurifier_speed_max_co2:
          value_template: >
            {% set co2_delta = states('sensor.bedroom_airpurifier_target_co2_delta') | float(0) %}
            {% set cooling_on = is_state('binary_sensor.bedroom_ac_is_cooling', 'on') | int %}
            {% set heating_on = is_state('switch.bedroom_airpurifier_ptc', 'on') | int %}
            {% set co2_shift = max(cooling_on, heating_on) * 150 + co2_delta * (1 - cooling_on) * (1 - heating_on)  %}
            {% if states('sensor.bedroom_airpurifier_favorite_speed') | float <= 60 %}
              {{ 600 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 70 %}
              {{ 650 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 80 %}
              {{ 700 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 90 %}
              {{ 750 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 100 %}
              {{ 800 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 110 %}
              {{ 900 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 120 %}
              {{ 950 + co2_shift }}
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 130 %}
              1200
            {% else %}
              5000
            {% endif %}
          availability_template: >
            {% set valid_speed = states('sensor.bedroom_airpurifier_favorite_speed') | float(0) >= 60 %}
            {% set valid_temp = states('sensor.bedroom_average_temperature') | float(0) > 0 %}
            {{ valid_speed and valid_temp }}

        bedroom_airpurifier_next_speed:
          value_template: >
            {% if states('sensor.bedroom_airpurifier_favorite_speed') | float <= 60 %}
              70
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 70 %}
              80
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 80 %}
              90
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 90 %}
              100
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 100 %}
              110
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 110 %}
              120
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 120 %}
              130
            {% else %}
              150
            {% endif %}
          availability_template: "{{ states('sensor.bedroom_airpurifier_favorite_speed') | float(0) >= 60 }}"

        bedroom_airpurifier_previous_speed:
          value_template: >
            {% if states('sensor.bedroom_airpurifier_favorite_speed') | float <= 70 %}
              60
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 80 %}
              70
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 90 %}
              80
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 100 %}
              90
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 110 %}
              100
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 120 %}
              110
            {% elif states('sensor.bedroom_airpurifier_favorite_speed') | float <= 130 %}
              120
            {% else %}
              130
            {% endif %}
          availability_template: "{{ states('sensor.bedroom_airpurifier_favorite_speed') | float(0) >= 60 }}"

        bedroom_airpurifier_favourite_speed_needs_changes:
          value_template: >
            {% set hi = (states('sensor.bedroom_airpurifier_speed_max_co2') | float) + 15 %}
            {% set lo = (states('sensor.bedroom_airpurifier_speed_min_co2') | float) - 35 %}
            {% set co2 = states('sensor.bedroom_co2') | float %}
            {% if co2 > hi %}
              up
            {% elif co2 < lo %}
              down
            {% else %}
              keep
            {% endif %}
          availability_template: >
            {% set valid_min_co2 = states('sensor.bedroom_airpurifier_speed_min_co2') | float(-1) >= 0 %}
            {% set valid_max_co2 = states('sensor.bedroom_airpurifier_speed_max_co2') | float(-1) >= 0 %}
            {% set valid_co2 = states('sensor.bedroom_co2') | float(0) > 0 %}
            {{ valid_min_co2 and valid_max_co2 and valid_co2 }}

  binary_sensor:
    - platform: template
      sensors:
        bedroom_airpurifier_favourite_speed_fixed:
          friendly_name: 'Фиксированная скорость бризера в спальне'
          value_template: >
            {% set smart_control_off = is_state('switch.bedroom_airpurifier_favourite_speed_smart_control', 'off') %}
            {% set tmp_fixed_speed = is_state('switch.bedroom_airpurifier_favourite_speed_temporary_fixed', 'on') %}
            {{ smart_control_off or tmp_fixed_speed }}

  automation:
    - id: 'Выбор режима работы бризера в спальне'
      alias: select_bedroom_airpurifier_preset_mode
      trigger:
        - entity_id: input_select.bedroom_airpurifier_mode
          platform: state
      action:
        - service: fan.set_preset_mode
          entity_id: fan.mijia_airpurifier_bedroom
          data_template:
            preset_mode: '{{ trigger.to_state.state }}'

    - id: 'Отслеживание режима работы бризера в спальне'
      alias: tracking_bedroom_airpurifier_preset_mode
      trigger:
        - platform: state
          entity_id: sensor.bedroom_airpurifier_preset_mode
      condition:
        - condition: template
          value_template: "{{ trigger.to_state.state is defined and trigger.to_state.state not in ['unknown', 'unavailable'] }}"
      action:
        - service: input_select.select_option
          entity_id: input_select.bedroom_airpurifier_mode
          data_template:
            option: '{{ trigger.to_state.state }}'

    - id: 'Выбор скорости потока воздуха для бризера в спальне'
      alias: select_bedroom_airpurifier_speed
      trigger:
        - platform: state
          entity_id: input_number.bedroom_airpurifier_favorite_speed
      action:
        - service: xiaomi_miio_airpurifier.fan_set_favorite_speed
          entity_id: fan.mijia_airpurifier_bedroom
          data_template:
            speed: '{{ trigger.to_state.state }}'

    - id: 'Отслеживание скорости потока воздуха для бризера в спальне'
      alias: tracking_bedroom_airpurifier_speed
      trigger:
        - platform: state
          entity_id: sensor.bedroom_airpurifier_favorite_speed
      condition:
        - condition: template
          value_template: '{{ trigger.to_state.state | int(0) > 0 }}'
      action:
        - service: input_number.set_value
          entity_id: input_number.bedroom_airpurifier_favorite_speed
          data_template:
            value: '{{ trigger.to_state.state | int }}'

    - id: 'Умный контроль скорости работы бризера в спальне'
      alias: bedroom_airpurifier_favourite_speed_smart_control
      initial_state: true
      trigger:
        - platform: time_pattern
          minutes: '/2'
      condition:
        - condition: state
          entity_id: sensor.bedroom_airpurifier_favourite_speed_needs_changes
          state:
            - 'up'
            - 'down'
        - condition: state
          entity_id: switch.bedroom_airpurifier_favourite_speed_smart_control
          state: 'on'
        - condition: state
          entity_id: switch.bedroom_airpurifier_favourite_speed_temporary_fixed
          state: 'off'
        - condition: template
          value_template: >
            {% set valid_prev_speed = states('sensor.bedroom_airpurifier_previous_speed') | int(0) > 0 %}
            {% set valid_next_speed = states('sensor.bedroom_airpurifier_previous_speed') | int(0) > 0 %}
            {{ valid_prev_speed and valid_next_speed }}
      action:
        - service: input_number.set_value
          entity_id: input_number.bedroom_airpurifier_favorite_speed
          data_template:
            value: >
              {% if is_state('sensor.bedroom_airpurifier_favourite_speed_needs_changes', 'up') %}
                {{ states('sensor.bedroom_airpurifier_next_speed') | int }}
              {% else %}
                {{ states('sensor.bedroom_airpurifier_previous_speed') | int }}
              {% endif %}

    - id: 'Включение бризера в спальне'
      alias: bedroom_airpurifier_turn_on
      initial_state: true
      trigger:
        - platform: time_pattern
          minutes: '/10'
        - platform: state
          entity_id: switch.somebody_home
          from: 'off'
          to: 'on'
      condition:
        - condition: state
          entity_id: switch.somebody_home
          state: 'on'
        - condition: state
          entity_id: fan.mijia_airpurifier_bedroom
          state: 'off'
        - condition: numeric_state
          entity_id: sensor.bedroom_co2
          above: 650
        - condition: state
          entity_id: input_boolean.bedroom_airpurifier_favourite_speed_smart_control
          state: 'on'
      action:
        - service: fan.turn_on
          entity_id: fan.mijia_airpurifier_bedroom
        - delay: 00:00:30
        - if:
            - condition: state
              entity_id: fan.mijia_airpurifier_bedroom
              state: 'on'
          then:
            - service: notify.tg_bot
              data:
                message: |
                  {{ '\U0001F4A8' }} Бризер в спальне включен.
                  {{ '\U0001F321' }} Температура {{ states('sensor.bedroom_average_temperature') | round(1) }}°C
                  {{ '\U0000269B' }} CO2 {{ states('sensor.bedroom_co2') | int }}ppm

    - id: 'Выключение бризера в спальне'
      alias: bedroom_airpurifier_turn_off
      initial_state: true
      trigger:
        - platform: time_pattern
          minutes: '/30'
        - platform: state
          entity_id: switch.somebody_home
          from: 'on'
          to: 'off'
      condition:
        - condition: state
          entity_id: fan.mijia_airpurifier_bedroom
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.bedroom_co2
          below: sensor.breezers_turnoff_co2_threshold
        - condition: state
          entity_id:
            - timer.bedroom_airpurifier_fixed_speed
          state: 'idle'
        - condition: state
          entity_id: switch.bedroom_airpurifier_favourite_speed_smart_control
          state: 'on'
        - condition: template
          value_template: >
            {% set outside_target_delta = states('sensor.outside_target_temperature_delta') | float(-99) %}
            {% set inside_target_delta = states('sensor.bedroom_current_target_temperature_delta') | float(99) %}
            {% set somebody_home = states('switch.somebody_home') | bool(True) %}
            {% set needs_cooling_from_outside = outside_target_delta < -10 and inside_target_delta > 1.5 and somebody_home %}
            {{ not needs_cooling_from_outside }}
      action:
        - service: switch.turn_off
          entity_id: switch.bedroom_airpurifier_ptc
          continue_on_error: true
        - service: fan.turn_off
          entity_id: fan.mijia_airpurifier_bedroom
        - delay: 00:00:45
        - if:
            - condition: state
              entity_id: fan.mijia_airpurifier_bedroom
              state: 'off'
          then:
            - service: notify.tg_bot
              data:
                message: |
                  {{ '\U0001F4A8' }} Бризер в спальне выключен.
                  {{ '\U0001F321' }} Температура {{ states('sensor.bedroom_average_temperature') | round(1) }}°C
                  {{ '\U0000269B' }} CO2 {{ states('sensor.bedroom_co2') | int }}ppm
          else:
            - service: notify.tg_bot
              data:
                message: |
                  {{ '\U000026A0' }} Не получилось выключить бризер в спальне, статус {{ states('fan.mijia_airpurifier_bedroom') }}.

    - id: 'Регулярное проветривание бризера в спальне'
      alias: bedroom_periodic_ventilation
      initial_state: true
      trigger:
        - platform: state
          entity_id: fan.mijia_airpurifier_bedroom
          from: 'on'
          for:
            hours: 24
      condition:
        - condition: state
          entity_id: switch.somebody_home
          state: 'off'
        - condition: state
          entity_id: fan.mijia_airpurifier_bedroom
          state: 'off'
        - condition: state
          entity_id: input_boolean.bedroom_airpurifier_favourite_speed_smart_control
          state: 'on'
      action:
        - service: fan.turn_on
          entity_id: fan.mijia_airpurifier_bedroom
        - service: input_select.select_option
          entity_id: input_select.bedroom_airpurifier_mode
          data:
            option: 'Favorite'
        - service: input_number.set_value
          entity_id: input_number.bedroom_airpurifier_favorite_speed
          data:
            value: 100
        - service: timer.start
          entity_id: timer.bedroom_airpurifier_fixed_speed
