alarm:
  sensor:
    - platform: template
      sensors:
        found_water_leaks:
          friendly_name: 'Найденные протечки'
          value_template: >
            {% set leakage_sensors = [
              'binary_sensor.bathroom_aqara_leak_sensor_water_leak',
              'binary_sensor.washing_machine_aqara_leak_sensor_water_leak'
              'binary_sensor.dishwasher_aqara_leak_sensor_water_leak'
            ] %}
            {{ states.binary_sensor
              | selectattr('entity_id','in', leakage_sensors)
              | selectattr('state', 'eq', 'on')
              | map(attribute='name')
              | join(', ')
              | lower }}
  
  
  binary_sensor:
    - platform: template
      sensors:
        water_leak_detected:
          friendly_name: 'Обнаружена протечка'
          value_template: >
            {% set found_water_leaks = states('sensor.found_water_leaks') %}
            {% if found_water_leaks != 'unknown' %}
              {{ found_water_leaks | length > 0 }}
            {% else %}
              false
            {% endif %}
          device_class: moisture
          icon_template: mdi:water-alert
        
        ups_not_fine:
          friendly_name: 'Проблема с ИБП'
          value_template: >
            {{ states('sensor.ups_status') not in ['ONLINE', 'CHARGING', 'ONBATT'] }}
          device_class: problem
        
        ups_powered_by_battery:
          friendly_name: 'ИБП работает от аккумулятора'
          value_template: >
            {{ states('sensor.ups_status') == 'ONBATT' }}
          icon_template: >
            {% if is_state('binary_sensor.ups_powered_by_battery', 'on') %}
              mdi:battery-arrow-down
            {% else %}
              mdi:battery-charging-100
            {% endif %}
        
        bedroom_ac_plug_overload:
          friendly_name: 'Перегрузка розетки кондиционера в спальне'
          value_template: >
            {{ states('sensor.bedroom_ac_plug_power') | float > 1000 }}
          icon_template: >
            {% if is_state('binary_sensor.bedroom_ac_plug_overload', 'on') %}
              mdi:lightning-bolt
            {% else %}
              mdi:power-plug
            {% endif %}
        
        kidsroom_ac_plug_overload:
          friendly_name: 'Перегрузка розетки кондиционера в детской'
          value_template: >
            {{ states('sensor.kidsroom_ac_plug_power') | float > 1000 }}
          icon_template: >
            {% if is_state('binary_sensor.kidsroom_ac_plug_overload', 'on') %}
              mdi:lightning-bolt
            {% else %}
              mdi:power-plug
            {% endif %}
  
  
  alert:
    water_leak_detected:
      name: 'Протечка воды'
      entity_id: binary_sensor.water_leak_detected
      state: 'on'
      message: >
        {{ '\U0001F30A' }} Протечка воды: {{ states('sensor.found_water_leaks') }}
      done_message: '{{ ''\U0001F3DC'' }} Протечка воды устранена'
      repeat: 5
      can_acknowledge: true
      notifiers:
        - tg
    
    fridge_door_left_opened:
      name: 'Дверь холодильника не закрыта'
      entity_id: binary_sensor.fridge_door
      state: 'on'
      repeat: 5
      skip_first: true
      message: >
        {{ '\U00002744' }} Дверь холодильника не закрыта!
      notifiers:
        - tg
    
    ups_power_went_down:
      name: 'ИБП работает от аккумулятора'
      entity_id: binary_sensor.ups_powered_by_battery
      state: 'on'
      repeat: 15
      message: >
        {{ '\U0001F50B' }} ИБП работает от аккумулятора! {{ states('sensor.time_date') }}
      notifiers:
        - tg
    
    ups_is_not_fine:
      name: 'Проблема с ИБП'
      entity_id: binary_sensor.ups_not_fine
      state: 'on'
      repeat: 60
      message: >
        {{ '\U000026A0' }} Пробелма с ИБП, статус {{ states('sensor.ups_status') }}. {{ states('sensor.time_date') }}
      notifiers:
        - tg
    
    bedroom_ac_plug_overload:
      name: 'Перегрузка розетки кондиционера в спальне'
      entity_id: binary_sensor.bedroom_ac_plug_overload
      state: 'on'
      repeat: 5
      message: >
        {{ '\U000026A0' }} Перегрузка розетки в спальне, потребление {{ states('sensor.bedroom_ac_plug_power') }}Вт, температура {{ states('sensor.bedroom_ac_plug_device_temperature') }}
      notifiers:
        - tg
    
    kidsroom_ac_plug_overload:
      name: 'Перегрузка розетки кондиционера в спальне'
      entity_id: binary_sensor.kidsroom_ac_plug_overload
      state: 'on'
      repeat: 5
      message: >
        {{ '\U000026A0' }} Перегрузка розетки в детской, потребление {{ states('sensor.kidsroom_ac_plug_power') }}Вт, температура {{ states('sensor.kidsroom_ac_plug_device_temperature') }}
      notifiers:
        - tg
  
  
  automation:
    - id: 'Протечка воды'
      alias: water_leak_detected_alarm
      trigger:
        - platform: state
          entity_id: binary_sensor.bathroom_aqara_leak_sensor_water_leak
          to: 'on'
        - platform: state
          entity_id: binary_sensor.washing_machine_aqara_leak_sensor_water_leak
          to: 'on'
        - platform: state
          entity_id: binary_sensor.dishwasher_aqara_leak_sensor_water_leak
          to: 'on'
      action:
        - service: alarm_control_panel.alarm_trigger
          entity_id: alarm_control_panel.miio_gateway
    
    - id: 'ИБП снова работает от сети'
      alias: ups_power_is_up_again
      trigger:
        - platform: state
          entity_id: binary_sensor.ups_powered_by_battery
          from: 'on'
      condition:
        - condition: state
          entity_id: binary_sensor.ups_not_fine
          state: 'off'
      action:
        - service: notify.tg
          data:
            message: >
              {{ '\U0001F50C' }} ИБП снова работает от сети! {{ states('sensor.time_date') }}
    
    - id: 'Перегрузка розетки кондиционера в спальне'
      alias: bedroom_ac_plug_overload
      trigger:
        - platform: state
          entity_id: binary_sensor.bedroom_ac_plug_overload
          to: 'on'
      action:
        - service: switch.turn_off
          entity_id: switch.bedroom_ac_plug
        - service: notify.tg
          data:
            message: >
              {{ '\U0001F50C' }} Розетка в спальне выключена! {{ states('sensor.time_date') }}
    
    - id: 'Перегрузка розетки кондиционера в детской'
      alias: kidsroom_ac_plug_overload
      trigger:
        - platform: state
          entity_id: binary_sensor.kidsroom_ac_plug_overload
          to: 'on'
      action:
        - service: switch.turn_off
          entity_id: switch.kidsroom_ac_plug
        - service: notify.tg
          data:
            message: >
              {{ '\U0001F50C' }} Розетка в детской выключена! {{ states('sensor.time_date') }}
    
    - id: 'Дверь в прихожей открылась'
      alias: hallway_door_was_opened
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.hallway_door_sensor_contact
          to: 'on'
      condition:
        - condition: state
          entity_id: timer.hallway_door_time_to_close
          state: 'idle'
      action:
        - service: notify.tg
          data:
            message: >
              {% set messages = ['Входная дверь открыта в',
                                 'Распахнули входную дверь, а сейчас',
                                 'Кто-то открыл входную дверь в'] %}
              {{ '\U0001F6AA' }} {{ messages | random }} {{ states('sensor.time_date') }}
        - service: timer.start
          entity_id: timer.hallway_door_left_opened
        - service: timer.start
          entity_id: timer.hallway_door_time_to_close
          
    - id: 'Проверка закрытия двери'
      alias: hallway_door_was_closed_check
      initial_state: true
      trigger:
        - platform: state
          entity_id: timer.hallway_door_left_opened
          from: 'active'
          to: 'idle'
      condition:
        - condition: state
          entity_id: binary_sensor.hallway_door_sensor_contact
          state: 'on'
      action:
        - service: notify.tg
          data:
            message: >
              {% set messages = ['входная дверь все еще открыта!',
                                 'не забыли закрыть входную дверь?',
                                 'CLOSE THE DOOR!!!11',
                                 'входную дверь может стоить закрыть?..'] %}
              {{ '\U0001F6AA' }} {{ states('sensor.time') }} - {{ messages | random }}
        - service: timer.start
          entity_id: timer.hallway_door_left_opened
