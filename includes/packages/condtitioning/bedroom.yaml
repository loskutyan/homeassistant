conditioning_bedroom:
  climate:
    - platform: smartir
      name: 'Bedroom AC'
      unique_id: bedroom_ac
      device_code: 1132
      controller_data: remote.bedroom_broadlink_rm4mini_remote
      temperature_sensor: sensor.bedroom_average_temperature
      humidity_sensor: sensor.bedroom_average_humidity
      power_sensor: binary_sensor.bedroom_ac_power

  input_boolean:
    bedroom_auto_conditioning:
      name: 'Автоматическое охлаждение воздуха в спальне'

    bedroom_ac_swing_mode:
      name: 'Режим качания жалюзи кондиционера в спальне'

  input_number:
    bedroom_ac_temperature:
      name: 'Установленная температура кондиционера в спальне'
      min: 20
      max: 31
      step: 1
      icon: mdi:thermometer-low

    bedroom_target_cooling_temperature:
      name: 'Целевая температура охлаждения в спальне'
      min: 20
      max: 31
      step: 0.5
      icon: mdi:thermometer-auto

  input_select:
    bedroom_ac_mode:
      name: 'Режим работы кондиционера в спальне'
      options:
        - auto
        - cool
        - fan_only
        - dry

    bedroom_ac_fan_mode:
      name: 'Скорость обдува кондиционера в спальне'
      options:
        - auto
        - low
        - mid
        - high
      icon: mdi:fan

  binary_sensor:
    - platform: template
      sensors:
        bedroom_ac_power:
          friendly_name: 'Кондиционер в спальне включен'
          device_class: power
          value_template: >
            {% set power = states('sensor.bedroom_ac_plug_power') | float(0) %}
            {% set drying_mode = is_state_attr('climate.bedroom_ac', 'last_on_operation', 'dry') %}
            {{ power > 4 or (power > 2.9 and drying_mode) }}
          availability_template: >
            {% set status =  states('switch.bedroom_ac_plug') %}
            {% if status == 'off' %}
              True
            {% elif status == 'on' %}
              {{ states('sensor.bedroom_ac_plug_power') | float(-1) >= 0 }}
            {% else %}
              False
            {% endif %}

        bedroom_ac_is_cooling:
          friendly_name: 'Кондиционер в спальне охлаждает или сушит воздух'
          value_template: "{{ states('sensor.bedroom_ac_plug_power') | float > 100 }}"
          availability_template: >
            {% set status =  states('switch.bedroom_ac_plug') %}
            {% if status == 'off' %}
              True
            {% elif status == 'on' %}
              {{ states('sensor.bedroom_ac_plug_power') | float(-1) >= 0 }}
            {% else %}
              False
            {% endif %}

  switch:
    - platform: template
      switches:
        bedroom_ac:
          friendly_name: 'Выключатель кондиционера в спальне'
          value_template: >
            {% set ac_on = is_state('binary_sensor.bedroom_ac_power', 'on') %}
            {% set ac_plug_on = is_state('switch.bedroom_ac_plug', 'on') %}
            {{ ac_on and ac_plug_on }}
          turn_on:
            service: climate.set_temperature
            entity_id: climate.bedroom_ac
            data_template:
              temperature: "{{ states('input_number.bedroom_ac_temperature') | int }}"
              hvac_mode: "{{ states('input_select.bedroom_ac_mode') }}"
          turn_off:
            service: climate.turn_off
            entity_id: climate.bedroom_ac
          icon_template: mdi:air-conditioner

        bedroom_auto_conditioning:
          friendly_name: 'Автоматическое охлаждение воздуха в спальне'
          value_template: >
            {{ states('input_boolean.bedroom_auto_conditioning') }}
          turn_on:
            service: input_boolean.turn_on
            entity_id: input_boolean.bedroom_auto_conditioning
          turn_off:
            service: input_boolean.turn_off
            entity_id: input_boolean.bedroom_auto_conditioning
          icon_template: mdi:snowflake-thermometer

        bedroom_cooling:
          friendly_name: 'Охлаждение воздуха в спальне'
          value_template: >
            {% set ac_on = is_state('switch.bedroom_ac', 'on') %}
            {% set cooling_on = is_state_attr('climate.bedroom_ac', 'last_on_operation', 'cool') %}
            {% set auto_cooling_on = is_state('switch.bedroom_auto_conditioning', 'on') %}
            {% set is_cooling_temp_low = state_attr('climate.bedroom_ac', 'temperature') | int(31) <= 28 %}
            {{ ac_on and cooling_on and (is_cooling_temp_low or auto_cooling_on) }}
          turn_on:
            - service: climate.set_temperature
              entity_id: climate.bedroom_ac
              data_template:
                temperature: "{{ ('input_number.bedroom_target_cooling_temperature') | int(25) }}"
                hvac_mode: 'cool'
            - service: switch.turn_on
              entity_id: switch.bedroom_auto_conditioning
          turn_off:
            service: climate.set_temperature
            entity_id: climate.bedroom_ac
            data_template:
              temperature: "{{ states('input_number.bedroom_ac_temperature') | int }}"
              hvac_mode: 'fan_only'
          icon_template: mdi:snowflake

  script:
    bedroom_ac_self_dry:
      alias: 'Просушка кондиционера в спальне'
      sequence:
        - service: switch.turn_off
          entity_id: switch.bedroom_auto_conditioning
        - service: climate.set_temperature
          entity_id: climate.bedroom_ac
          data:
            temperature: 31
            hvac_mode: 'cool'
        - service: climate.set_fan_mode
          entity_id: climate.bedroom_ac
          data:
            fan_mode: 'high'
        - service: notify.tg_bot
          data:
            message: >
              {{'\U0001F4A6'}} Запущено осушение кондиционера в спальне!
        - delay: 04:00:00
        - service: climate.set_fan_mode
          entity_id: climate.bedroom_ac
          data:
            fan_mode: 'auto'
        - service: switch.turn_on
          entity_id: switch.bedroom_auto_conditioning
        - service: switch.turn_off
          entity_id: switch.bedroom_ac
        - service: notify.tg_bot
          data:
            message: >
              {{'\U00002600'}} Осушение кондиционера в спальне закончено!

  automation:
    - id: 'Выбор режима работы кондиционера в спальне'
      alias: select_bedroom_ac_mode
      trigger:
        - platform: state
          entity_id:
            - input_select.bedroom_ac_mode
            - input_number.bedroom_ac_temperature
      condition:
        - condition: state
          entity_id: switch.bedroom_ac
          state: 'on'
      action:
        - service: climate.set_temperature
          entity_id: climate.bedroom_ac
          data_template:
            temperature: "{{ states('input_number.bedroom_ac_temperature') | int }}"
            hvac_mode: "{{ states('input_select.bedroom_ac_mode') }}"

    - id: 'Выбор скорости обдува кондиционера в спальне'
      alias: select_bedroom_ac_fan_mode
      trigger:
        - platform: state
          entity_id: input_select.bedroom_ac_fan_mode
      action:
        - service: climate.set_fan_mode
          entity_id: climate.bedroom_ac
          data_template:
            fan_mode: '{{ trigger.to_state.state }}'

    - id: 'Выбор режима качания халюзи кондиционера в спальне'
      alias: select_bedroom_ac_swing_mode
      trigger:
        - platform: state
          entity_id: input_boolean.bedroom_ac_swing_mode
      action:
        - service: climate.set_swing_mode
          entity_id: climate.bedroom_ac
          data_template:
            swing_mode: '{{ trigger.to_state.state }}'

    - id: 'Отслеживание режима работы кондиционера в спальне'
      alias: tracking_bedroom_ac_mode
      trigger:
        - platform: state
          entity_id: climate.bedroom_ac
          attribute: last_on_operation
      condition:
        - condition: template
          value_template: "{{ trigger.to_state.state is defined and trigger.to_state.state not in ['unknown', 'unavailable'] }}"
      action:
        - service: input_select.select_option
          entity_id: input_select.bedroom_ac_mode
          data_template:
            option: '{{ trigger.to_state.state }}'

    - id: 'Отслеживание температуры кондиционера в спальне'
      alias: tracking_bedroom_ac_temperature
      trigger:
        - platform: state
          entity_id: climate.bedroom_ac
          attribute: temperature
      condition:
        - condition: template
          value_template: '{{ trigger.to_state.attributes.temperature | int(0) > 0 }}'
      action:
        - service: input_number.set_value
          entity_id: input_number.bedroom_ac_temperature
          data_template:
            value: '{{ trigger.to_state.attributes.temperature | int }}'

    - id: 'Отслеживание скорости обдува кондиционера в спальне'
      alias: tracking_bedroom_ac_fan_mode
      trigger:
        - platform: state
          entity_id: climate.bedroom_ac
          attribute: fan_mode
      condition:
        - condition: template
          value_template: "{{ trigger.to_state.attributes.fan_mode is defined and trigger.to_state.attributes.fan_mode not in ['unknown', 'unavailable'] }}"
      action:
        - service: input_select.select_option
          entity_id: input_select.bedroom_ac_fan_mode
          data_template:
            option: '{{ trigger.to_state.attributes.fan_mode }}'

    - id: 'Отслеживание режима качания халюзи кондиционера в спальне'
      alias: tracking_bedroom_ac_swing_mode
      trigger:
        - platform: state
          entity_id: climate.bedroom_ac
          attribute: swing_mode
      condition:
        - condition: template
          value_template: "{{ trigger.to_state.attributes.swing_mode is defined and trigger.to_state.attributes.swing_mode not in ['unknown', 'unavailable'] }}"
      action:
        - service: input_boolean.turn_{{ trigger.to_state.attributes.swing_mode }}
          entity_id: input_boolean.bedroom_ac_swing_mode

    - id: 'Умный контроль кондиционера для охлаждения спальни'
      alias: bedroom_ac_cooling_smart_control
      initial_state: true
      trigger:
        - platform: time_pattern
          minutes: '/15'
        - platform: state
          entity_id: input_number.bedroom_target_cooling_temperature
        - platform: state
          entity_id:
            - switch.bedroom_ac
            - switch.bedroom_auto_conditioning
          to: 'on'
        - platform: state
          entity_id: climate.bedroom_ac
          attribute: last_on_operation
      condition:
        - condition: state
          entity_id: input_select.bedroom_ac_mode
          state: 'cool'
        - condition: state
          entity_id:
            - switch.bedroom_ac
            - switch.bedroom_auto_conditioning
          state: 'on'
        - condition: template
          value_template: "{{ states('sensor.bedroom_average_temperature') | float(0) > 0 }}"
        - condition: template
          value_template: >
            {% set target_temp = states('input_number.bedroom_target_cooling_temperature') | float(25) %}
            {% set cur_temp = states('sensor.bedroom_average_temperature') | float %}
            {% set ac_temp = state_attr('climate.bedroom_ac', 'temperature') | float %}
            {% set delta = target_temp - cur_temp %}
            {{ (delta > 0.5 and ac_temp < 31) or (delta < -0.5 and  ac_temp > cur_temp) }}
      action:
        - service: climate.set_temperature
          entity_id: climate.bedroom_ac
          data_template:
            temperature: >
              {% set target_temp = states('input_number.bedroom_target_cooling_temperature') | float %}
              {% set cur_temp = states('sensor.bedroom_average_temperature') | float %}
              {% set delta = target_temp - cur_temp %}
              {% if delta > 0.5 %}
                31
              {% elif delta < -0.5 %}
                {{ target_temp | int }}
              {% endif %}
            hvac_mode: 'cool'

    - id: 'Умный контроль кондиционера для осушения спальни'
      alias: bedroom_ac_drying_smart_control
      initial_state: true
      trigger:
        - platform: time_pattern
          minutes: '/15'
        - platform: state
          entity_id:
            - switch.bedroom_ac
            - switch.bedroom_auto_conditioning
          to: 'on'
        - platform: numeric_state
          entity_id: sensor.bedroom_average_humidity
          above: 60
          for: '00:01:00'
        - platform: numeric_state
          entity_id: sensor.bedroom_average_humidity
          below: 50
          for: '00:01:00'
      condition:
        - or:
            - condition: state
              entity_id: input_select.bedroom_ac_mode
              state: 'cool'
            - condition: state
              entity_id: input_select.bedroom_ac_mode
              state: 'dry'
        - condition: state
          entity_id:
            - switch.bedroom_ac
            - switch.bedroom_auto_conditioning
          state: 'on'
      action:
        - if:
            - condition: state
              entity_id: input_select.bedroom_ac_mode
              state: 'cool'
            - condition: numeric_state
              entity_id: sensor.bedroom_average_humidity
              above: 60
          then:
            - service: input_select.select_option
              entity_id: input_select.bedroom_ac_mode
              data_template:
                option: 'dry'
            - service: notify.tg_bot
              data:
                message: |
                  {{ '\U00002600' }} Кондиционер в спальне переключен в режим осушения.
                  {{ '\U0001F321' }} Температура {{ states('sensor.bedroom_average_temperature') | round(1) }}°C
                  {{ '\U0001F4A7' }} Влажность {{ states('sensor.bedroom_average_humidity') | round(1) }}%
        - if:
            - condition: state
              entity_id: input_select.bedroom_ac_mode
              state: 'dry'
            - condition: numeric_state
              entity_id: sensor.bedroom_average_humidity
              below: 50
          then:
            - service: input_select.select_option
              entity_id: input_select.bedroom_ac_mode
              data_template:
                option: 'cool'
            - service: notify.tg_bot
              data:
                message: |
                  {{ '\U00002744' }} Кондиционер в спальне переключен в режим охлаждения.
                  {{ '\U0001F321' }} Температура {{ states('sensor.bedroom_average_temperature') | round(1) }}°C
                  {{ '\U0001F4A7' }} Влажность {{ states('sensor.bedroom_average_humidity') | round(1) }}%

    - id: 'Изменение режима качания халюзи кондиционера в спальне при работе с монитором'
      alias: toggle_bedroom_ac_swing_mode_on_cubeserver_vm_windows10_monitor_using
      trigger:
        - platform: state
          entity_id: switch.cubeserver_vm_windows10_with_bedroom_monitor_using
          from:
            - 'on'
            - 'off'
          to:
            - 'on'
            - 'off'
      condition:
        - condition: state
          entity_id: input_select.bedroom_ac_mode
          state: 'cool'
        - condition: state
          entity_id:
            - switch.bedroom_ac
            - switch.bedroom_auto_conditioning
          state: 'on'
        - condition: template
          value_template: >
            {{ trigger.to_state.state == states('input_boolean.bedroom_ac_swing_mode') }}
      action:
        - service: climate.set_swing_mode
          entity_id: climate.bedroom_ac
          data_template:
            swing_mode: '{{ trigger.from_state.state }}'
